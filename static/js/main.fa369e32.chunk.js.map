{"version":3,"sources":["components/Menu/Menu.js","flowers.js","components/Home.js","stores/customers.js","components/Register.js","components/Login.js","data.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","useState","localStorage","getItem","customer","setCustomer","userScore","setUserScore","useEffect","Navbar","bg","variant","Container","Brand","href","Toggle","Collapse","className","Nav","Link","on","onClick","removeItem","undefined","Text","flowers","name","picture","Home","id","class","map","item","to","src","customers","Register","username","setUsername","password","setPassword","history","useHistory","Row","Col","sm","Form","onSubmit","e","preventDefault","push","console","log","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","Login","found","find","x","setItem","pathname","onCustomerlogin","alert","quizzes","questionIndex","questions","choiceIndex","i","length","question","choices","answer","generateQuestions","quiz","generateQuizzes","Quiz","currentIndex","setCurrentIndex","score","setScore","gameOver","setGameOver","quizName","useParams","questionArray","md","Image","ListGroup","choice","Item","selectedChoice","action","Card","Header","Body","Title","onUserScoreSet","Footer","App","isAuthenticated","setIsAuthenticated","userScoreSet","setUserScoreSet","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa369e32.chunk.js","sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Menu = (props) => {\r\n    const [customer, setCustomer] = useState(localStorage.getItem(\"customer\"));\r\n    const [userScore, setUserScore] = useState(\r\n        localStorage.getItem(\"userScore\")\r\n    );\r\n    const logoff = () => {\r\n        localStorage.removeItem(\"customer\");\r\n        localStorage.removeItem(\"userScore\");\r\n        setCustomer(undefined);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCustomer(localStorage.getItem(\"customer\"));\r\n        setUserScore(localStorage.getItem(\"userScore\"));\r\n    });\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/\">My App</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n\r\n                    {customer ? (\r\n                        <Nav.Link href=\"/signup\" on onClick={logoff}>\r\n                            log Off\r\n                        </Nav.Link>\r\n                    ) : (\r\n                        <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                    )}\r\n                    <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\r\n                    {customer ? (\r\n                        <Navbar.Text>\r\n                            Signed in as:{\" \"}\r\n                            <span>\r\n                                <a href=\"#\">{customer}</a> High Score:{\" \"}\r\n                                {userScore}\r\n                            </span>\r\n                        </Navbar.Text>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","import flowers from \"../flowers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n    const [customer, setCustomer] = useState(localStorage.getItem(\"customer\"));\r\n    useEffect(() => {\r\n        setCustomer(localStorage.getItem(\"customer\"));\r\n    });\r\n    return (\r\n        <section id=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"title text-center\">\r\n                    <h1 class=\"display-1\">Flowers</h1>\r\n                    {!customer ? (\r\n                        <p>\r\n                            <div>Choose a Flower to take the Quiz.</div>\r\n                            <a href=\"/signup\">Sign In</a> to save your score!\r\n                        </p>\r\n                    ) : (\r\n                        <p>Choose a Flower to take the Quiz.</p>\r\n                    )}\r\n                </div>\r\n                {flowers.map((item) => {\r\n                    return (\r\n                        <div class=\"row mt-2\">\r\n                            <div class=\"col-md-4\"></div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"card text-center mt-2\">\r\n                                    <Link to={`/quiz/${item.name}`}>\r\n                                        <img\r\n                                            src={item.picture}\r\n                                            class=\"card-img-top\"\r\n                                        />\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                {item.name}\r\n                                            </h5>\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","let customers = [];\r\n\r\nexport default customers;\r\n","import { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useState } from \"react\";\r\nimport customers from \"../stores/customers\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    let saveCustomer = (e) => {\r\n        e.preventDefault();\r\n        customers.push({ username: username, password: password });\r\n        console.log(\"creds saved\");\r\n        history.push(\"/login\");\r\n    };\r\n    let onUsernameChanged = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    let onPasswordChanged = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <h1>Sign Up</h1>\r\n            </Row>\r\n            <Row>\r\n                <Col sm=\"auto\">\r\n                    <Form onSubmit={saveCustomer}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>\r\n                                Choose a Username (your email adress)\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={username}\r\n                                onChange={onUsernameChanged}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group\r\n                            className=\"mb-3\"\r\n                            controlId=\"formBasicPassword\"\r\n                        >\r\n                            <Form.Label>Choose a Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={onPasswordChanged}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useState } from \"react\";\r\nimport customers from \"../stores/customers\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    let login = (e) => {\r\n        let found = customers.find(\r\n            (x) => (x.username === username) & (x.password === password)\r\n        );\r\n        if (found) {\r\n            console.log(found);\r\n            localStorage.setItem(\"customer\", username);\r\n            history.push({ pathname: \"/\" });\r\n            props.onCustomerlogin();\r\n        } else {\r\n            alert(\"User not found. Please Sign Up.\");\r\n            history.push({ pathname: \"/signup\" });\r\n        }\r\n    };\r\n    let onUsernameChanged = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    let onPasswordChanged = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <h1>Sign In</h1>\r\n            </Row>\r\n            <Row>\r\n                <Col sm=\"auto\">\r\n                    <Form onSubmit={login}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                value={username}\r\n                                onChange={onUsernameChanged}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group\r\n                            className=\"mb-3\"\r\n                            controlId=\"formBasicPassword\"\r\n                        >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={onPasswordChanged}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import flowers from './flowers';\r\n\r\nlet generateQuestions = () => {\r\n    let questions = [];\r\n    let choiceIndex = 0;\r\n    for(let i = 0; i < flowers.length; i++) {\r\n        choiceIndex = i;\r\n        if(choiceIndex > (flowers.length - 4)){\r\n           choiceIndex = i - 2;\r\n        }\r\n        let question = {\r\n            picture: flowers[i].picture,\r\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex+1].name, flowers[choiceIndex+2].name],\r\n            answer: flowers[i].name\r\n        };\r\n        questions.push(question);\r\n    }\r\n    return questions;\r\n};\r\n\r\nlet generateQuizzes = () => {\r\n    let quizzes = []; \r\n    let questionIndex = 0;\r\n    let questions = generateQuestions();\r\n    for(let i = 0; i < questions.length; i++){\r\n        questionIndex = i;\r\n        if(questionIndex > (questions.length - 7)) {\r\n            questionIndex = i - 5;\r\n        }\r\n        let quiz = [\r\n            questions[questionIndex], \r\n            questions[questionIndex+1], \r\n            questions[questionIndex+2], \r\n            questions[questionIndex+3], \r\n            questions[questionIndex+4],\r\n            questions[questionIndex+5]\r\n        ];\r\n        quizzes.push(quiz);\r\n    }\r\n    return quizzes;\r\n};\r\n\r\nlet quizzes = generateQuizzes();\r\n\r\n\r\nexport default quizzes;","import {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Image,\r\n    Button,\r\n    ListGroup,\r\n} from \"react-bootstrap\";\r\nimport quizzes from \"../data\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Quiz = (props) => {\r\n    //console.log(quizzes);\r\n    const history = useHistory();\r\n    const [customer, setCustomer] = useState(localStorage.getItem(\"customer\"));\r\n    const [userScore, setUserScore] = useState(0);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const { quizName } = useParams();\r\n    const questions = quizzes.find((questionArray) =>\r\n        questionArray.find((question) => question.answer === quizName)\r\n    );\r\n    //console.log(questions);\r\n    let nextQuestion = (selectedChoice) => {\r\n        if (currentIndex < questions.length - 1) {\r\n            setCurrentIndex(currentIndex + 1);\r\n        } else {\r\n            setGameOver(true);\r\n        }\r\n        if (questions[currentIndex].answer === selectedChoice) {\r\n            setScore(score + 1);\r\n        }\r\n    };\r\n\r\n    let restartQuiz = () => {\r\n        setCurrentIndex(0);\r\n        setGameOver(false);\r\n        setScore(0);\r\n    };\r\n\r\n    const saveScore = () => {\r\n        localStorage.setItem(\"userScore\", score);\r\n        props.onUserScoreSet();\r\n        console.log(\"score saved to local storage\");\r\n        setUserScore(score);\r\n\r\n        history.push({ pathname: \"/\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCustomer(localStorage.getItem(\"customer\"));\r\n    });\r\n    return (\r\n        <Container>\r\n            {!gameOver ? (\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col md=\"auto\">\r\n                            <Image\r\n                                src={questions[currentIndex].picture}\r\n                            ></Image>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <ListGroup>\r\n                                {questions[currentIndex].choices.map(\r\n                                    (choice) => (\r\n                                        <ListGroup.Item\r\n                                            key={choice}\r\n                                            onClick={() => nextQuestion(choice)}\r\n                                            action\r\n                                            variant=\"primary\"\r\n                                        >\r\n                                            {choice}\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>score: {score}</Col>\r\n                    </Row>\r\n                </Container>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n\r\n            {gameOver ? (\r\n                <Container>\r\n                    <Card className=\"text-center\">\r\n                        <Card.Header>The quiz is over</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Score: {score}</Card.Title>\r\n                            <Card.Text>What do you want to do next?</Card.Text>\r\n                            <Button onClick={restartQuiz}>Restart</Button>\r\n                            {customer ? (\r\n                                <Button onClick={saveScore}>Save Score</Button>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                            <Link to=\"/\">\r\n                                {\" \"}\r\n                                <Button>Go Home</Button>{\" \"}\r\n                            </Link>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text-muted\">\r\n                            2 days ago\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Container>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\nexport default Quiz;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Menu from \"./components/Menu/Menu\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Quiz from \"./components/Quiz\";\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [userScoreSet, setUserScoreSet] = useState(false);\n    const onCustomerlogin = () => {\n        setIsAuthenticated(true);\n        return null;\n    };\n    const onUserScoreSet = () => {\n        if (userScoreSet === true) {\n            setUserScoreSet(false);\n        } else {\n            setUserScoreSet(true);\n        }\n        return null;\n    };\n    return (\n        <Router>\n            <Container>\n                <Row>\n                    <Col>\n                        <Menu\n                            isAuthenticated={isAuthenticated}\n                            userScoreSet={userScoreSet}\n                            onUserScoreSet={onUserScoreSet}\n                        />\n                    </Col>\n                </Row>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/signup\" component={Register} />\n                    <Route path=\"/login\">\n                        <Login onCustomerlogin={onCustomerlogin} />\n                    </Route>\n                    <Route path=\"/quiz/:quizName\">\n                        <Quiz onUserScoreSet={onUserScoreSet} />\n                    </Route>\n                </Switch>\n            </Container>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}